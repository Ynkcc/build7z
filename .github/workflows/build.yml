name: Build 7-Zip for Android ARM64

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      TARGET_ARCH: arm64
      ANDROID_API_LEVEL: 21  # Minimum API level for 64-bit binaries on Android
      NDK_VERSION: r25b
      CFLAGS: "-static"
      CXXFLAGS: "-static"

    steps:
    - name: Checkout source code
      uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y wget unzip build-essential git

    - name: Download p7zip source code
      run: |
        git clone https://github.com/jinfeihan57/p7zip.git
        cd p7zip
        git checkout master

    - name: Download Android NDK
      run: |
        wget https://dl.google.com/android/repository/android-ndk-${{ env.NDK_VERSION }}-linux.zip
        unzip android-ndk-${{ env.NDK_VERSION }}-linux.zip
        export ANDROID_NDK=$PWD/android-ndk-${{ env.NDK_VERSION }}
        export PATH=$ANDROID_NDK/toolchains/llvm/prebuilt/linux-x86_64/bin:$PATH

    - name: Set up cross-compilation environment
      run: |
        export CC=aarch64-linux-android${{ env.ANDROID_API_LEVEL }}-clang
        export CXX=aarch64-linux-android${{ env.ANDROID_API_LEVEL }}-clang++
        export AR=aarch64-linux-android-ar
        export AS=aarch64-linux-android-as
        export LD=aarch64-linux-android-ld
        export RANLIB=aarch64-linux-android-ranlib
        export STRIP=aarch64-linux-android-strip

    - name: Compile 7-Zip (p7zip)
      run: |
        cd p7zip
        make TARGET_CPU=ARM64 CC=$CC CXX=$CXX AR=$AR AS=$AS LD=$LD RANLIB=$RANLIB STRIP=$STRIP CFLAGS="${CFLAGS}" CXXFLAGS="${CXXFLAGS}"

    - name: Upload compiled binary
      uses: actions/upload-artifact@v3
      with:
        name: 7zip-arm64
        path: ./p7zip/bin/7z
